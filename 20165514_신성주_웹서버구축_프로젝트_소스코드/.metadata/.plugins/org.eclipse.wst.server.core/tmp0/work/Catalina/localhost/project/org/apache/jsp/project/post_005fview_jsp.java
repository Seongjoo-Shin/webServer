/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2021-06-14 11:15:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import post.Post;
import post.Post_check;
import post.Comment;
import java.util.*;

public final class post_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("post.Post_check");
    _jspx_imports_classes.add("post.Comment");
    _jspx_imports_classes.add("post.Post");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>여행지 랭킹</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');

		String user_id = null;
		if(session.getAttribute("user_id") != null){
			user_id = (String)session.getAttribute("user_id");
		}
		
		int post_id = 0;
		if(request.getParameter("post_id") != null){
			post_id = Integer.parseInt(request.getParameter("post_id"));
			session.setAttribute("post_id", Integer.toString(post_id));
		}		
		
		Post post = new Post_check().getPost(post_id);
		Comment comm = new Post_check().getPost_id(post_id);
		
		int com_page = 1;
		
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("  \t\t<div class=\"container-fluid\">\r\n");
      out.write("    \t\t<button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      \t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    \t\t</button>\r\n");
      out.write("    \t\t<a class=\"navbar-brand\" href=\"index.jsp\">Home</a>\r\n");
      out.write("    \t\t<ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("        \t<div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n");
      out.write("      \t\t\t\r\n");
      out.write("        \t\t<li class=\"nav-item\">\r\n");
      out.write("          \t\t\t<a class=\"nav-link\" href=\"post.jsp\">여행지 게시판</a>\r\n");
      out.write("        \t\t</li>\r\n");
      out.write("        \t\t<li class=\"nav-item\">\r\n");
      out.write("          \t\t\t<a class=\"nav-link\" href=\"map.jsp\">일정 제작</a>\r\n");
      out.write("        \t\t</li>\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t<li class=\"nav-item\">\r\n");
      out.write("          \t\t\t<a class=\"nav-link\" href=\"mypage.jsp\">MyPage</a>\r\n");
      out.write("        \t\t</li>\r\n");
      out.write("     \t\t</div>\r\n");
      out.write("     \t\t\t<li class=\"nav-item\">\r\n");
      out.write("     \t\t\t\t<div class=\"col-12\"><a class=\"btn btn-secondary\" href=\"logout.jsp\">로그아웃</a></div>\r\n");
      out.write("     \t\t\t</li>\r\n");
      out.write("      \t\t</ul>\t\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("\t</nav><br>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<table class=\"table table-striped\" style=\"text-align: center; border: 1px solid #dddddd\">\r\n");
      out.write("\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th colspan=\"2\" style=\"background-color: #eeeeee; text-align: center;\">게시판 글 보기</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td style=\"width: 20%;\">글 제목</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\">");
      out.print( post.getPost_title() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>작성자</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\">");
      out.print( post.getUser_id() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>추천수</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\">");
      out.print( post.getLiked() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>작성일자</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\">");
      out.print( post.getPost_date().substring(0,11) + post.getPost_date().substring(11,13) + "시" + post.getPost_date().substring(14,16) + "분" );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>내용</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\" style=\"height:200px; text-align:left;\">");
      out.print( post.getPost_content() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\t\t\t\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t");

				if( user_id != null){
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"post_like_process.jsp\" class=\"btn btn-secondary\">추천</a>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t");
		
				}
			
      out.write("\r\n");
      out.write("\t\t\t<a href=\"post.jsp\" class=\"btn btn-primary\" style=\"float: right;\">목록</a> &nbsp;&nbsp;\r\n");
      out.write("\t\t\t");

				if(user_id != null && user_id.equals(post.getUser_id())){
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"post_update.jsp?post_id=");
      out.print( post_id );
      out.write("\" class=\"btn btn-primary\">수정</a>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<a href=\"post_delete_process.jsp?post_id=");
      out.print( post_id );
      out.write("\" class=\"btn btn-primary\">삭제</a>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t</div><br><br>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 게시판 메인 페이지 영역 끝 -->\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<div class=\"comment_view\">\r\n");
      out.write("\t\t\t\t<table class=\"table table-striped\" style=\"text-align: center; border: 1px solid #dddddd\">\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th colspan=\"3\" style=\"background-color: #eeeeee; text-align: center;\">댓글</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td style=\"width: 70%;\">내용</td>\r\n");
      out.write("\t\t\t\t\t\t<td style=\"width: 15%;\">작성자</td>\r\n");
      out.write("\t\t\t\t\t\t<td style=\"width: 15%;\">작성일자</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t");
 
						Post_check post_check = new Post_check();
						ArrayList<Comment> com_list = post_check.getComment(post.getPost_id());
						for(int i=0; i<com_list.size(); i++){
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print( com_list.get(i).getComment_content() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print( com_list.get(i).getComment_id() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print( com_list.get(i).getComment_date() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\t\r\n");
      out.write("\t\t\t\t\t");
			
						}
						
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<form method=\"post\" action=\"comment_write.jsp\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"2\"><input type=\"text\" class=\"form-control\" name=\"comment_content\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"1\"><input type=\"submit\" class=\"form-control\" value=\"등록\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
